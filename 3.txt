/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
// A Java program for a Client 
//package SHA;
import java.io.*;
import java.math.BigInteger;
import java.net.Socket;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;
/**
 *
 * @author hp
 */
public class SHAclient {
    private Socket socket= null; 
	  private Scanner sc;
	  
 public SHAclient(String address, int port) throws NoSuchAlgorithmException{
	 try
     { 
         socket = new Socket(address, port); 
         System.out.println("Connected"); 

       	  PrintStream ps=new PrintStream(socket.getOutputStream());
     	  
       	  sc = new Scanner(System.in);	
       	  System.out.println("Enter String");
          String password = sc.nextLine();

          MessageDigest md = MessageDigest.getInstance("SHA-256");
          byte[] hashInBytes = md.digest(password.getBytes(StandardCharsets.UTF_8));

  		  // bytes to hex
          StringBuilder sb = new StringBuilder();
          for (byte b : hashInBytes) 
          {
              sb.append(String.format("%02x", b));//covert bytes to Hex value
          }   
     	 ps.println(password);
         ps.println(sb.toString());
     	
     	  
     }
	 catch(UnknownHostException u) 
     { 
         System.out.println(u); 
     } 
     catch(IOException i) 
     { 
         System.out.println(i); 
     } 
    
     // close the connection 
     try
     {   
         socket.close(); 
     } 
     catch(IOException i) 
     { 
         System.out.println(i); 
     } 

	
 }
 
 public static void main(String args[]) throws NoSuchAlgorithmException, FileNotFoundException , IOException{
  new SHAclient("localhost", 2000);
 }

}
/*
SHA SERVER
import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;

public class SHAserver {
    private Socket          socket   = null; 
    private ServerSocket    server   = null; 
	private Scanner socket_Scan; 
	public SHAserver(String address, int port) throws NoSuchAlgorithmException{
	 try
     { 
         server = new ServerSocket(port); 
         System.out.println("Server started"); 

         System.out.println("Waiting for a client ..."); 

         socket = server.accept(); 
         System.out.println("Client accepted"); 

         // takes input from the client socket
         
         socket_Scan = new Scanner(socket.getInputStream());
 		 String password=socket_Scan.nextLine();
 		 String digest=socket_Scan.nextLine();
 		 
         MessageDigest md = MessageDigest.getInstance("SHA-256");//gives output of fixed length hash value
         byte[] hashInBytes = md.digest(password.getBytes(StandardCharsets.UTF_8));

 		  // bytes to hex
         StringBuilder sb = new StringBuilder();
         for (byte b : hashInBytes) {
             sb.append(String.format("%02x", b));
         }
         System.out.println("Server Mesaage Digest : "+sb.toString());
         System.out.println("Client Mesaage Digest : "+digest.toString());
         if(sb.toString().equals(digest.toString())==true)
         {
        	 System.out.println("Message Digest Matched");
         }
         else
         {
           	 System.out.println("Message Digest not Matched");
         }
     }
	 catch(IOException i) 
     { 
         System.out.println(i); 
     } 
    
     // close the connection 
     try
     { 
         socket.close(); 
     } 
     catch(IOException i) 
     { 
         System.out.println(i); 
     } 

	
 }
 
 public static void main(String args[]) throws NoSuchAlgorithmException, FileNotFoundException , IOException{
  
  new SHAserver("localhost", 2000);
 }
    
}

*/
