# -*- coding: utf-8 -*-
"""
Created on Wed Oct 16 22:45:11 2019

@author: hp
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset=pd.read_csv('F:\database\Social_Network_Ads.csv')

X = dataset.iloc[:,[2,3]].values
Y = dataset.iloc[:,4].values

from sklearn.cross_validation import train_test_split
X_train, X_test,Y_train, Y_test= train_test_split(X,Y,test_size=0.25)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train= sc.fit_transform(X_train)
X_test=sc.transform(X_test)

from sklearn.svm import SVC
classifier= SVC(kernel="linear")
classifier.fit(X_train,Y_train)

y_pred= classifier.predict(X_test)

from sklearn.metrics import confusion_matrix
cm= confusion_matrix(Y_test,y_pred)

from matplotlib.colors import ListedColormap
X_set,Y_set=X_train , Y_train
X1, X2= np.meshgrid(np.arange(start= X_set[:,0].min()-1,stop=X_set[:,0].max()+1,step=0.005),
                    np.arange(start= X_set[:,1].min()-1,stop=X_set[:,1].max()+1,step=0.005))
plt.contourf(X1,X2,classifier.predict(np.array([X1.ravel(),X2.ravel()]).T).reshape(X1.shape), 
             alpha=0.75, cmap=ListedColormap(('red','green')))

for i,j in enumerate(np.unique(Y_set)):
    plt.scatter(X_set[Y_set==j,0],X_set[Y_set==j,1],
                c=ListedColormap(('red','green'))(i),label=j)

plt.title("SVM") 
plt.xlabel("Age") 
plt.ylabel("estimated salary")
plt.legend()
plt.show()  




from matplotlib.colors import ListedColormap
X_set,Y_set=X_test , Y_test
X1, X2= np.meshgrid(np.arange(start= X_set[:,0].min()-1,stop=X_set[:,0].max()+1,step=0.005),
                    np.arange(start= X_set[:,1].min()-1,stop=X_set[:,1].max()+1,step=0.005))
plt.contourf(X1,X2,classifier.predict(np.array([X1.ravel(),X2.ravel()]).T).reshape(X1.shape), 
             alpha=0.75, cmap=ListedColormap(('red','green')))

for i,j in enumerate(np.unique(Y_set)):
    plt.scatter(X_set[Y_set==j,0],X_set[Y_set==j,1],
                c=ListedColormap(('red','green'))(i),label=j)

plt.title("SVM") 
plt.xlabel("Age") 
plt.ylabel("estimated salary")
plt.legend()
plt.show()  
